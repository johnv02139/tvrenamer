<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<project name="ShowFinder build script" default="usage"
         xmlns:ivy="antlib:org.apache.ivy.ant">

  <property name="src.main" value="src/main" />
  <property name="src.test" value="src/test" />
  <property name="build" value="out" />
  <property name="lib.dl" value="lib" />
  <property name="res" value="src/main/resources" />
  <property name="rel" value="release" />

  <property name="etc" value="etc" />

  <property file="launch4j.properties" />

  <property name="version.file" value="${res}/showfinder.version" />
  <property name="logging.file" value="${res}/logging.properties" />
  <loadfile property="version" srcFile="${version.file}">
    <filterchain>
      <striplinebreaks />
    </filterchain>
  </loadfile>

  <path id="classpath">
    <fileset dir="${lib.dl}">
      <!-- We can compile against any swt version-->
      <include name="org.eclipse.swt.cocoa.macosx-*.jar" />
      <include name="commons-codec-*.jar" />
      <include name="xstream-*.jar" />
      <include name="xmlpull-*.jar" />
      <include name="xpp3_min*.jar" />
    </fileset>
  </path>

  <path id="classpath.test">
    <fileset dir="${lib.dl}" />

    <pathelement location="${build}" />
  </path>

  <target name="resolve" description="retrieve dependencies with ivy">
    <ivy:retrieve/>
  </target>

  <target name="init">
    <mkdir dir="${build}" />
  </target>

  <target name="compile" depends="init">
    <javac srcdir="${src.main}/java" destdir="${build}" classpathref="classpath" debug="true" debuglevel="lines,vars,source" includeantruntime="false" target="1.8" source="1.8" />
    <copy file="${version.file}" todir="${build}" />
    <copy file="${logging.file}" todir="${build}" />
  </target>

  <target name="compile.test" depends="compile">
    <javac srcdir="${src.test}/java" destdir="${build}" classpathref="classpath.test" debug="true" debuglevel="lines,vars,source" includeantruntime="false" />
    <copy file="${version.file}" todir="${build}" />
  </target>

  <target name="javadoc">
    <javadoc destdir="docs/api"
             author="true"
             version="true"
             use="true"
             access="private"
             classpathref="classpath"
             windowtitle="TVRenamer Documentation">

      <packageset dir="src/main" defaultexcludes="yes">
        <include name="org/tvrenamer/**"/>
      </packageset>

      <doctitle><![CDATA[<h1>TVRenamer</h1>]]></doctitle>
      <bottom><![CDATA[<i>Copyright &#169; 2017 TVRenamer.org. All Rights Reserved.</i>]]></bottom>
      <link href="http://docs.oracle.com/javase/8/docs/api/"/>
    </javadoc>
  </target>

  <target name="init-checkstyle">
    <path id="checkstyle.lib.path">
      <fileset dir="${lib.dl}">
        <include name="checkstyle-7.1.1.jar" />
        <include name="guava-19.0.jar" />
        <include name="commons-beanutils-1.9.2.jar" />
        <include name="commons-cli-1.3.1.jar" />
        <include name="commons-collections-3.2.2.jar" />
        <include name="commons-logging-1.1.1.jar" />
        <include name="antlr-2.7.7.jar" />
        <include name="antlr4-runtime-4.5.3.jar" />
      </fileset>
    </path>
    <taskdef resource="com/puppycrawl/tools/checkstyle/ant/checkstyle-ant-task.properties"
             classpathref="checkstyle.lib.path"/>
  </target>

  <target name="checkstyle" depends="init-checkstyle"
          description="Generates a report of code convention violations.">
    <checkstyle config="etc/checks.xml">
      <fileset dir="src" includes="**/*.java"/>
    </checkstyle>
  </target>

  <target name="findbugs" depends="compile" description="Run findbugs on the code">
    <ivy:cachepath pathid="findbugs.classpath" conf="findbugs"/>
    <taskdef name="findbugs"
             classname="edu.umd.cs.findbugs.anttask.FindBugsTask"
             classpathref="findbugs.classpath"/>
    <findbugs output="html"
              reportLevel="low"
              excludeFilter="${etc}/exclude.xml"
              outputFile="${build}/fbugs.html" >
      <auxClasspath refid="classpath"/>
      <auxClasspath refid="classpath.test"/>
      <classpath refid="findbugs.classpath"/>
      <class location="${build}"/>
    </findbugs>
  </target>

  <target name="clean">
    <delete includeemptydirs="true" failonerror="false">
      <fileset dir="${build}" includes="**/*" />
    </delete>
  </target>

  <target name="usage">
    <echo message="Usage: ant compile" />
  </target>

  <target name="proxy" if="proxy.enabled">
    <setproxy proxyhost="${proxy.host}" proxyport="${proxy.port}"
      proxyuser="${proxy.user}" proxypassword="${proxy.password}"/>
  </target>

  <target name="test" depends="clean, compile.test, proxy">
    <copy file="${version.file}" todir="${build}" />

    <junit haltonerror="true" haltonfailure="true" printsummary="true" fork="no" forkmode="once">
      <formatter type="plain" usefile="false" />

      <classpath refid="classpath.test" />

      <batchtest>
        <fileset dir="${src.test}/java" includes="**/*Test.java" />
      </batchtest>
    </junit>
  </target>

</project>
